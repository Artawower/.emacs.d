js-mode ts-mode ng2-ts-mode typescript-ts-mode typescript-mode web-mode

(l "console.log(" p ")")
(console.date "console.log(`[${new Date().toString()}] " p "`)")
(console.trace "console.trace(`"
              (format "✎: [line %s][%s]: " (line-number-at-pos) (buffer-name)) 
              p " ${" r "}"
              "`)"
              )
(console.full "console.log(`"
              (format "✎: [line %s][%s]: " (line-number-at-pos) (buffer-name)) 
              p " ${" r "}"
              "`)"
              )

(console.full-object "console.log(`"
                     (format "✎: [%s]" (or (turbo-log--get-context) (buffer-name)))
                     "[${new Date().toString()}] "
                     p "`" " , " r ")"
                     )

(logger.info "logger.info(`"
             (format "✎: [%s]" (buffer-name)) 
             "[${new Date().toString()}] "
             p " %o`" " , " r ")"
             )


(console.full-line-object "console.log(`"
                          (format "✎: [line %s][%s]" (line-number-at-pos) (buffer-name)) 
                          "[${new Date().toString()}]: "
                          p "`" " , " r ")"
                          )

(console.pretty-stringify "console.log(`"
                     (format "✎: [%s]" (or (turbo-log--get-context) (buffer-name)))
                     "[${new Date().toString()}] "
                     (r "val" val) "`" " , JSON.stringify(" (r "val" val) ", null, 2))")


(console.log > "console.log('"
             (format "[line %s]%s: " (line-number-at-pos) (if (turbo-log--get-context) (format "[%s]" (turbo-log--get-context)) "")) p "'" ", "
             r
             ")")


(crab > "// TODO: (\\/) @_@ (\\/)")

(private-class-method "private " (p "name") "(" (p "arguments") "): " (p "type") " {" n> p n> "}")
(private-readonly-dependency "private readonly " (p "field") ": " (p "type"))
(private-readonly-variable "private readonly " (p "field") " = " (p "value"))
(protected-readonly-dependency "protected readonly " (p "field") " = " (p "value"))
(private-method-sharp "#" (p "name") "(" (p "arguments") "): " (p "type") "{" n> p n> "}")
(public-method "public " (p "name") "(" (p "arguments") "): " (p "type") "{" n> p> n> "}")
(public-readonly "public readonly " (p "field") ": " (p "type"))
(public-static-readonly "public static readonly " (p "field") " = " (p "value"))



fundamental-mode prog-mode text-mode
(prettier "{
  \"trailingComma\": \"es5\",
  \"tabWidth\": 2,
  \"semi\": true,
  \"singleQuote\": true,
  \"lineWidth\": 80
}
")


python-mode

(print "print(\""
       (format "✎: [%s] " (or (turbo-log--get-context) (buffer-name)))
       p "\" " p ")"
       
       )

web-mode
(template "<template>"
          n> p n
          "</template>"
          n n
          "<script lang=\"ts\" setup>"
          n> p n
          "</script>")

(script "<script lang=\"ts\" setup>"
        n> p n
        "</script>")
